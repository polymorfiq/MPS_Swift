package Swift.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.AbstractIntentionDescriptor;
import jetbrains.mps.openapi.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.openapi.intentions.IntentionExecutable;
import jetbrains.mps.openapi.intentions.Kind;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import java.util.Collections;
import jetbrains.mps.intentions.AbstractIntentionExecutable;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.openapi.intentions.IntentionDescriptor;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public final class VariableToConstant_Intention extends AbstractIntentionDescriptor implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;

  public VariableToConstant_Intention() {
    super(Kind.NORMAL, false, new SNodePointer("r:b5884a30-a4e8-447c-98eb-849f873b57b6(Swift.intentions)", "2928370859058232699"));
  }

  @Override
  public String getPresentation() {
    return "VariableToConstant";
  }

  @Override
  public boolean isSurroundWith() {
    return false;
  }

  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new IntentionImplementation());
    }
    return myCachedExecutable;
  }
  /*package*/ final class IntentionImplementation extends AbstractIntentionExecutable {
    public IntentionImplementation() {
    }

    @Override
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Convert to constant";
    }

    @Override
    public void execute(final SNode node, final EditorContext editorContext) {
      final SNode letDecl = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439d9bL, "Swift.structure.ConstantDecl"));
      SPropertyOperations.assign(letDecl, PROPS.has_explicit_type$5hVM, SPropertyOperations.getBoolean(node, PROPS.has_explicit_type$5hVM));
      SPropertyOperations.assign(letDecl, PROPS.has_initial_value$5hGL, SPropertyOperations.getBoolean(node, PROPS.has_initial_value$5hGL));
      SLinkOperations.setTarget(letDecl, LINKS.initial_value$5iRQ, SLinkOperations.getTarget(node, LINKS.initial_value$5iRQ));
      SLinkOperations.setTarget(letDecl, LINKS.explicit_type$5j6R, SLinkOperations.getTarget(node, LINKS.explicit_type$5j6R));
      SLinkOperations.getChildren(letDecl, LINKS.variables$5iCP).clear();
      ListSequence.fromList(SLinkOperations.getChildren(node, LINKS.variables$5iCP)).visitAll((var) -> {
        SPropertyOperations.assign(var, PROPS.mutable$DKBG, false);
        ListSequence.fromList(SLinkOperations.getChildren(letDecl, LINKS.variables$5iCP)).addElement(var);
      });
      SNodeOperations.replaceWithAnother(node, letDecl);
    }

    @Override
    public boolean isApplicable(final SNode node, final EditorContext editorContext) {
      return true;
    }



    @Override
    public IntentionDescriptor getDescriptor() {
      return VariableToConstant_Intention.this;
    }

  }

  private static final class PROPS {
    /*package*/ static final SProperty has_explicit_type$5hVM = MetaAdapterFactory.getProperty(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x28a3a9c7f8bd7a87L, 0x28a3a9c7f8bd930cL, "has_explicit_type");
    /*package*/ static final SProperty has_initial_value$5hGL = MetaAdapterFactory.getProperty(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x28a3a9c7f8bd7a87L, 0x28a3a9c7f8bd930bL, "has_initial_value");
    /*package*/ static final SProperty mutable$DKBG = MetaAdapterFactory.getProperty(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439d9cL, 0x26f658b42439da8L, "mutable");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink initial_value$5iRQ = MetaAdapterFactory.getContainmentLink(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x28a3a9c7f8bd7a87L, 0x28a3a9c7f8bd9310L, "initial_value");
    /*package*/ static final SContainmentLink explicit_type$5j6R = MetaAdapterFactory.getContainmentLink(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x28a3a9c7f8bd7a87L, 0x28a3a9c7f8bd9311L, "explicit_type");
    /*package*/ static final SContainmentLink variables$5iCP = MetaAdapterFactory.getContainmentLink(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x28a3a9c7f8bd7a87L, 0x28a3a9c7f8bd930fL, "variables");
  }
}
