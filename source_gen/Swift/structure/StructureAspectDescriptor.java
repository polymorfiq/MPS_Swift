package Swift.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAssignable = createDescriptorForAssignable();
  /*package*/ final ConceptDescriptor myConceptAssignment = createDescriptorForAssignment();
  /*package*/ final ConceptDescriptor myConceptBool = createDescriptorForBool();
  /*package*/ final ConceptDescriptor myConceptBoolValue = createDescriptorForBoolValue();
  /*package*/ final ConceptDescriptor myConceptCommentMultiLine = createDescriptorForCommentMultiLine();
  /*package*/ final ConceptDescriptor myConceptCommentMultilineLine = createDescriptorForCommentMultilineLine();
  /*package*/ final ConceptDescriptor myConceptCommentSingleLine = createDescriptorForCommentSingleLine();
  /*package*/ final ConceptDescriptor myConceptConstantDecl = createDescriptorForConstantDecl();
  /*package*/ final ConceptDescriptor myConceptDouble = createDescriptorForDouble();
  /*package*/ final ConceptDescriptor myConceptDoubleValue = createDescriptorForDoubleValue();
  /*package*/ final ConceptDescriptor myConceptEmptyStatement = createDescriptorForEmptyStatement();
  /*package*/ final ConceptDescriptor myConceptExpression = createDescriptorForExpression();
  /*package*/ final ConceptDescriptor myConceptFalseValue = createDescriptorForFalseValue();
  /*package*/ final ConceptDescriptor myConceptFloat = createDescriptorForFloat();
  /*package*/ final ConceptDescriptor myConceptFloatValue = createDescriptorForFloatValue();
  /*package*/ final ConceptDescriptor myConceptImplicitlyUnwrappedOptional = createDescriptorForImplicitlyUnwrappedOptional();
  /*package*/ final ConceptDescriptor myConceptInt = createDescriptorForInt();
  /*package*/ final ConceptDescriptor myConceptIntValue = createDescriptorForIntValue();
  /*package*/ final ConceptDescriptor myConceptLiteralValue = createDescriptorForLiteralValue();
  /*package*/ final ConceptDescriptor myConceptModule = createDescriptorForModule();
  /*package*/ final ConceptDescriptor myConceptNameValuePair = createDescriptorForNameValuePair();
  /*package*/ final ConceptDescriptor myConceptNamedEntityDecl = createDescriptorForNamedEntityDecl();
  /*package*/ final ConceptDescriptor myConceptNil = createDescriptorForNil();
  /*package*/ final ConceptDescriptor myConceptNilValue = createDescriptorForNilValue();
  /*package*/ final ConceptDescriptor myConceptOptional = createDescriptorForOptional();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptString = createDescriptorForString();
  /*package*/ final ConceptDescriptor myConceptStringValue = createDescriptorForStringValue();
  /*package*/ final ConceptDescriptor myConceptTrueValue = createDescriptorForTrueValue();
  /*package*/ final ConceptDescriptor myConceptTuple = createDescriptorForTuple();
  /*package*/ final ConceptDescriptor myConceptTupleValue = createDescriptorForTupleValue();
  /*package*/ final ConceptDescriptor myConceptTypable = createDescriptorForTypable();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final ConceptDescriptor myConceptTypeAlias = createDescriptorForTypeAlias();
  /*package*/ final ConceptDescriptor myConceptTypealiasDecl = createDescriptorForTypealiasDecl();
  /*package*/ final ConceptDescriptor myConceptUInt = createDescriptorForUInt();
  /*package*/ final ConceptDescriptor myConceptUIntValue = createDescriptorForUIntValue();
  /*package*/ final ConceptDescriptor myConceptVariable = createDescriptorForVariable();
  /*package*/ final ConceptDescriptor myConceptVariableDecl = createDescriptorForVariableDecl();
  /*package*/ final ConceptDescriptor myConceptVariableReference = createDescriptorForVariableReference();
  /*package*/ final EnumerationDescriptor myEnumerationIntSize = new EnumerationDescriptor_IntSize();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAssignable, myConceptAssignment, myConceptBool, myConceptBoolValue, myConceptCommentMultiLine, myConceptCommentMultilineLine, myConceptCommentSingleLine, myConceptConstantDecl, myConceptDouble, myConceptDoubleValue, myConceptEmptyStatement, myConceptExpression, myConceptFalseValue, myConceptFloat, myConceptFloatValue, myConceptImplicitlyUnwrappedOptional, myConceptInt, myConceptIntValue, myConceptLiteralValue, myConceptModule, myConceptNameValuePair, myConceptNamedEntityDecl, myConceptNil, myConceptNilValue, myConceptOptional, myConceptStatement, myConceptString, myConceptStringValue, myConceptTrueValue, myConceptTuple, myConceptTupleValue, myConceptTypable, myConceptType, myConceptTypeAlias, myConceptTypealiasDecl, myConceptUInt, myConceptUIntValue, myConceptVariable, myConceptVariableDecl, myConceptVariableReference);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Assignable:
        return myConceptAssignable;
      case LanguageConceptSwitch.Assignment:
        return myConceptAssignment;
      case LanguageConceptSwitch.Bool:
        return myConceptBool;
      case LanguageConceptSwitch.BoolValue:
        return myConceptBoolValue;
      case LanguageConceptSwitch.CommentMultiLine:
        return myConceptCommentMultiLine;
      case LanguageConceptSwitch.CommentMultilineLine:
        return myConceptCommentMultilineLine;
      case LanguageConceptSwitch.CommentSingleLine:
        return myConceptCommentSingleLine;
      case LanguageConceptSwitch.ConstantDecl:
        return myConceptConstantDecl;
      case LanguageConceptSwitch.Double:
        return myConceptDouble;
      case LanguageConceptSwitch.DoubleValue:
        return myConceptDoubleValue;
      case LanguageConceptSwitch.EmptyStatement:
        return myConceptEmptyStatement;
      case LanguageConceptSwitch.Expression:
        return myConceptExpression;
      case LanguageConceptSwitch.FalseValue:
        return myConceptFalseValue;
      case LanguageConceptSwitch.Float:
        return myConceptFloat;
      case LanguageConceptSwitch.FloatValue:
        return myConceptFloatValue;
      case LanguageConceptSwitch.ImplicitlyUnwrappedOptional:
        return myConceptImplicitlyUnwrappedOptional;
      case LanguageConceptSwitch.Int:
        return myConceptInt;
      case LanguageConceptSwitch.IntValue:
        return myConceptIntValue;
      case LanguageConceptSwitch.LiteralValue:
        return myConceptLiteralValue;
      case LanguageConceptSwitch.Module:
        return myConceptModule;
      case LanguageConceptSwitch.NameValuePair:
        return myConceptNameValuePair;
      case LanguageConceptSwitch.NamedEntityDecl:
        return myConceptNamedEntityDecl;
      case LanguageConceptSwitch.Nil:
        return myConceptNil;
      case LanguageConceptSwitch.NilValue:
        return myConceptNilValue;
      case LanguageConceptSwitch.Optional:
        return myConceptOptional;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.String:
        return myConceptString;
      case LanguageConceptSwitch.StringValue:
        return myConceptStringValue;
      case LanguageConceptSwitch.TrueValue:
        return myConceptTrueValue;
      case LanguageConceptSwitch.Tuple:
        return myConceptTuple;
      case LanguageConceptSwitch.TupleValue:
        return myConceptTupleValue;
      case LanguageConceptSwitch.Typable:
        return myConceptTypable;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      case LanguageConceptSwitch.TypeAlias:
        return myConceptTypeAlias;
      case LanguageConceptSwitch.TypealiasDecl:
        return myConceptTypealiasDecl;
      case LanguageConceptSwitch.UInt:
        return myConceptUInt;
      case LanguageConceptSwitch.UIntValue:
        return myConceptUIntValue;
      case LanguageConceptSwitch.Variable:
        return myConceptVariable;
      case LanguageConceptSwitch.VariableDecl:
        return myConceptVariableDecl;
      case LanguageConceptSwitch.VariableReference:
        return myConceptVariableReference;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationIntSize);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAssignable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Assignable", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b425f39ceL);
    b.interface_();
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559279135182");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAssignment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Assignment", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b425f39caL);
    b.class_(false, false, false);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439dadL);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559279135178");
    b.version(3);
    b.aggregate("assignee", 0x26f658b4262005dL).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b425f39ceL).optional(false).ordered(true).multiple(false).origin("175470559279317085").done();
    b.aggregate("assignment", 0x26f658b425f39ddL).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439db2L).optional(false).ordered(true).multiple(false).origin("175470559279135197").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBool() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Bool", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42c091d9L);
    b.class_(false, false, false);
    // extends: Swift.structure.Type
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559285514713");
    b.version(3);
    b.alias("Bool");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "BoolValue", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42c3e42dL);
    b.class_(false, true, false);
    // extends: Swift.structure.LiteralValue
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4268ca25L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559285732397");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommentMultiLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "CommentMultiLine", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b427c2d3cL);
    b.class_(false, false, false);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439dadL);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559281032508");
    b.version(3);
    b.aggregate("lines", 0x26f658b427c2d67L).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b427c2d63L).optional(false).ordered(true).multiple(true).origin("175470559281032551").done();
    b.alias("/*");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommentMultilineLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "CommentMultilineLine", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b427c2d63L);
    b.class_(false, false, false);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559281032547");
    b.version(3);
    b.property("comment", 0x26f658b427c2d64L).type(PrimitiveTypeId.STRING).origin("175470559281032548").done();
    b.alias("*");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommentSingleLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "CommentSingleLine", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b427c2c6dL);
    b.class_(false, false, false);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439dadL);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559281032301");
    b.version(3);
    b.property("comment", 0x26f658b427c2c6fL).type(PrimitiveTypeId.STRING).origin("175470559281032303").done();
    b.alias("/");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstantDecl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "ConstantDecl", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439d9bL);
    b.class_(false, false, false);
    // extends: Swift.structure.NamedEntityDecl
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x28a3a9c7f8bd7a87L);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439dadL);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559277325723");
    b.version(3);
    b.alias("let");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDouble() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Double", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42a73dc2L);
    b.class_(false, false, false);
    // extends: Swift.structure.Type
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559283854786");
    b.version(3);
    b.alias("Double");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDoubleValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "DoubleValue", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42a73dc5L);
    b.class_(false, false, false);
    // extends: Swift.structure.LiteralValue
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4268ca25L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559283854789");
    b.version(3);
    b.property("beforeDecimal", 0x26f658b42a79c95L).type(PrimitiveTypeId.STRING).origin("175470559283879061").done();
    b.property("afterDecimal", 0x26f658b42a79c96L).type(PrimitiveTypeId.STRING).origin("175470559283879062").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmptyStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "EmptyStatement", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439dbaL);
    b.class_(false, false, false);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439dadL);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559277325754");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Expression", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439db2L);
    b.interface_();
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559277325746");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFalseValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "FalseValue", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42c10f35L);
    b.class_(false, false, false);
    // extends: Swift.structure.BoolValue
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42c3e42dL);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439db2L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559285546805");
    b.version(3);
    b.alias("false");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFloat() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Float", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4275d3f0L);
    b.class_(false, false, false);
    // extends: Swift.structure.Type
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559280616432");
    b.version(3);
    b.alias("Float");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFloatValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "FloatValue", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4275d3c4L);
    b.class_(false, false, false);
    // extends: Swift.structure.LiteralValue
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4268ca25L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559280616388");
    b.version(3);
    b.property("beforeDecimal", 0x26f658b428c881eL).type(PrimitiveTypeId.STRING).origin("175470559282104350").done();
    b.property("afterDecimal", 0x26f658b428c8820L).type(PrimitiveTypeId.STRING).origin("175470559282104352").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImplicitlyUnwrappedOptional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "ImplicitlyUnwrappedOptional", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x28a3a9c7f8cf4ac0L);
    b.class_(false, false, false);
    // extends: Swift.structure.Optional
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42d47ee8L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/2928370859058875072");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInt() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Int", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f858L);
    b.class_(false, false, false);
    // extends: Swift.structure.Type
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559278725208");
    b.version(3);
    b.property("bits", 0x26f658b429450eaL).type(MetaIdFactory.dataTypeId(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4292b53eL)).origin("175470559282614506").done();
    b.alias("Int");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIntValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "IntValue", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4275d3b1L);
    b.class_(false, false, false);
    // extends: Swift.structure.LiteralValue
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4268ca25L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559280616369");
    b.version(3);
    b.property("value", 0x26f658b4275d3bbL).type(PrimitiveTypeId.STRING).origin("175470559280616379").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLiteralValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "LiteralValue", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4268ca25L);
    b.class_(false, true, false);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439db2L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559279761957");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Module", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439dabL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559277325739");
    b.version(3);
    b.aggregate("body", 0x26f658b42439db8L).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439dadL).optional(true).ordered(true).multiple(true).origin("175470559277325752").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNameValuePair() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "NameValuePair", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42ce3c87L);
    b.class_(false, false, false);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559286410375");
    b.version(3);
    b.property("name", 0x26f658b42ce3c88L).type(PrimitiveTypeId.STRING).origin("175470559286410376").done();
    b.property("named", 0x26f658b42ce3c90L).type(PrimitiveTypeId.BOOLEAN).origin("175470559286410384").done();
    b.aggregate("value", 0x26f658b42ce3c8aL).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439db2L).optional(false).ordered(true).multiple(false).origin("175470559286410378").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNamedEntityDecl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "NamedEntityDecl", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x28a3a9c7f8bd7a87L);
    b.class_(false, true, false);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/2928370859057707655");
    b.version(3);
    b.property("has_initial_value", 0x28a3a9c7f8bd930bL).type(PrimitiveTypeId.BOOLEAN).origin("2928370859057713931").done();
    b.property("has_explicit_type", 0x28a3a9c7f8bd930cL).type(PrimitiveTypeId.BOOLEAN).origin("2928370859057713932").done();
    b.aggregate("variables", 0x28a3a9c7f8bd930fL).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439d9cL).optional(false).ordered(true).multiple(true).origin("2928370859057713935").done();
    b.aggregate("initial_value", 0x28a3a9c7f8bd9310L).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439db2L).optional(true).ordered(true).multiple(false).origin("2928370859057713936").done();
    b.aggregate("explicit_type", 0x28a3a9c7f8bd9311L).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f859L).optional(true).ordered(true).multiple(false).origin("2928370859057713937").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNil() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Nil", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42e28536L);
    b.class_(false, false, false);
    // extends: Swift.structure.Type
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559287739702");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNilValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "NilValue", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42da5abaL);
    b.class_(false, false, false);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439db2L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559287204538");
    b.version(3);
    b.alias("nil");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOptional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Optional", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42d47ee8L);
    b.class_(false, false, false);
    // extends: Swift.structure.Type
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559286820584");
    b.version(3);
    b.aggregate("ofType", 0x26f658b42d47ee9L).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f859L).optional(false).ordered(true).multiple(false).origin("175470559286820585").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Statement", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439dadL);
    b.interface_();
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559277325741");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForString() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "String", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b425ed31cL);
    b.class_(false, false, false);
    // extends: Swift.structure.Type
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559279108892");
    b.version(3);
    b.alias("String");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "StringValue", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4268ca21L);
    b.class_(false, false, false);
    // extends: Swift.structure.LiteralValue
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4268ca25L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559279761953");
    b.version(3);
    b.property("value", 0x26f658b4268ca3fL).type(PrimitiveTypeId.STRING).origin("175470559279761983").done();
    b.alias("\"");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTrueValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "TrueValue", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42c101a7L);
    b.class_(false, false, false);
    // extends: Swift.structure.BoolValue
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42c3e42dL);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439db2L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559285543335");
    b.version(3);
    b.alias("true");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTuple() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Tuple", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42c47863L);
    b.class_(false, false, false);
    // extends: Swift.structure.Type
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559285770339");
    b.version(3);
    b.aggregate("types", 0x26f658b42c47875L).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L).optional(true).ordered(true).multiple(true).origin("175470559285770357").done();
    b.alias("(");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTupleValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "TupleValue", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42c47e49L);
    b.class_(false, false, false);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439db2L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559285771849");
    b.version(3);
    b.aggregate("vals", 0x26f658b42c47e4eL).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42ce3c87L).optional(true).ordered(true).multiple(true).origin("175470559285771854").done();
    b.alias("tuple");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Typable", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f859L);
    b.interface_();
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559278725209");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Type", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L);
    b.class_(false, true, false);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f859L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559278725240");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeAlias() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "TypeAlias", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42b4e3b4L);
    b.class_(false, false, false);
    // extends: Swift.structure.Type
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559284749236");
    b.version(3);
    b.aggregate("aliasFor", 0x26f658b42b4e3b7L).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L).optional(false).ordered(true).multiple(false).origin("175470559284749239").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypealiasDecl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "TypealiasDecl", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42baf701L);
    b.class_(false, false, false);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439dadL);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559285147393");
    b.version(3);
    b.aggregate("alias", 0x26f658b42baf706L).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42b4e3b4L).optional(false).ordered(true).multiple(false).origin("175470559285147398").done();
    b.alias("typealias");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUInt() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "UInt", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4282298fL);
    b.class_(false, false, false);
    // extends: Swift.structure.Type
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4258f878L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559281424783");
    b.version(3);
    b.property("bits", 0x26f658b4292cc8fL).type(MetaIdFactory.dataTypeId(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4292b53eL)).origin("175470559282515087").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUIntValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "UIntValue", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42815c7aL);
    b.class_(false, false, false);
    // extends: Swift.structure.LiteralValue
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b4268ca25L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559281372282");
    b.version(3);
    b.property("value", 0x26f658b42815c7cL).type(PrimitiveTypeId.STRING).origin("175470559281372284").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "Variable", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439d9cL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559277325724");
    b.version(3);
    b.property("mutable", 0x26f658b42439da8L).type(PrimitiveTypeId.BOOLEAN).origin("175470559277325736").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableDecl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "VariableDecl", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439d9aL);
    b.class_(false, false, false);
    // extends: Swift.structure.NamedEntityDecl
    b.super_(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x28a3a9c7f8bd7a87L);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439dadL);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559277325722");
    b.version(3);
    b.alias("var");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Swift", "VariableReference", 0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b425f39e3L);
    b.class_(false, false, false);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439db2L);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439dadL);
    b.parent(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b425f39ceL);
    b.origin("r:f66bab3a-b647-49e3-9e98-90aefd17b024(Swift.structure)/175470559279135203");
    b.version(3);
    b.associate("referenced", 0x26f658b425f39e8L).target(0xfe2099137e444724L, 0xa9e768530fec997cL, 0x26f658b42439d9cL).optional(false).origin("175470559279135208").done();
    return b.create();
  }
}
